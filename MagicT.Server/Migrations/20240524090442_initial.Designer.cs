// <auto-generated />
using System;
using MagicT.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicT.Server.Migrations
{
    [DbContext(typeof(MagicTContext))]
    [Migration("20240524090442_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MagicT.Shared.Models.AUDIT_BASE", b =>
                {
                    b.Property<int>("AB_ROWID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AB_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AB_END_POINT")
                        .HasColumnType("longtext");

                    b.Property<string>("AB_METHOD")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AB_SERVICE")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AB_TYPE")
                        .HasColumnType("int");

                    b.Property<int>("AB_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("AB_ROWID");

                    b.HasIndex("AB_DATE", "AB_TYPE", "AB_USER_ID", "AB_SERVICE", "AB_METHOD");

                    b.ToTable("AUDIT_BASE");
                });

            modelBuilder.Entity("MagicT.Shared.Models.Base.AUTHORIZATIONS_BASE", b =>
                {
                    b.Property<int>("AB_ROWID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AB_AUTH_TYPE")
                        .HasColumnType("longtext");

                    b.Property<string>("AB_NAME")
                        .HasColumnType("longtext");

                    b.HasKey("AB_ROWID");

                    b.ToTable("AUTHORIZATIONS_BASE");
                });

            modelBuilder.Entity("MagicT.Shared.Models.TestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CheckData")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionDetails")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TestModel");
                });

            modelBuilder.Entity("MagicT.Shared.Models.USER_ROLES", b =>
                {
                    b.Property<int>("UR_ROWID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UR_ROLE_REFNO")
                        .HasColumnType("int");

                    b.Property<int>("UR_USER_REFNO")
                        .HasColumnType("int");

                    b.HasKey("UR_ROWID");

                    b.HasIndex("UR_ROLE_REFNO");

                    b.HasIndex("UR_USER_REFNO");

                    b.ToTable("USER_ROLES");
                });

            modelBuilder.Entity("MagicT.Shared.Models.USERS", b =>
                {
                    b.Property<int>("U_ROWID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("U_EMAIL")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("U_FULLNAME")
                        .HasColumnType("longtext");

                    b.Property<bool>("U_IS_ACTIVE")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("U_IS_ADMIN")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("U_LASTNAME")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("U_NAME")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("U_PASSWORD")
                        .HasColumnType("longtext");

                    b.Property<string>("U_PHONE_NUMBER")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("U_USERNAME")
                        .HasColumnType("longtext");

                    b.HasKey("U_ROWID");

                    b.ToTable("USERS");
                });

            modelBuilder.Entity("MagicT.Shared.Models.AUDIT_FAILED", b =>
                {
                    b.HasBaseType("MagicT.Shared.Models.AUDIT_BASE");

                    b.Property<string>("AF_ERROR")
                        .HasColumnType("longtext");

                    b.Property<string>("AF_PARAMETERS")
                        .HasColumnType("longtext");

                    b.ToTable("AUDIT_FAILED");
                });

            modelBuilder.Entity("MagicT.Shared.Models.AUDIT_QUERY", b =>
                {
                    b.HasBaseType("MagicT.Shared.Models.AUDIT_BASE");

                    b.Property<string>("AQ_PARAMETERS")
                        .HasColumnType("longtext");

                    b.ToTable("AUDIT_QUERY");
                });

            modelBuilder.Entity("MagicT.Shared.Models.AUDIT_RECORDS", b =>
                {
                    b.HasBaseType("MagicT.Shared.Models.AUDIT_BASE");

                    b.Property<bool>("AR_IS_PRIMARYKEY")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AR_NEW_VALUE")
                        .HasColumnType("longtext");

                    b.Property<string>("AR_OLD_VALUE")
                        .HasColumnType("longtext");

                    b.Property<string>("AR_PROPERTY_NAME")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AR_TABLE_NAME")
                        .HasColumnType("varchar(255)");

                    b.HasIndex("AR_TABLE_NAME", "AR_PROPERTY_NAME");

                    b.ToTable("AUDIT_RECORDS");
                });

            modelBuilder.Entity("MagicT.Shared.Models.PERMISSIONS", b =>
                {
                    b.HasBaseType("MagicT.Shared.Models.Base.AUTHORIZATIONS_BASE");

                    b.Property<string>("PER_PERMISSION_NAME")
                        .HasColumnType("longtext");

                    b.Property<int>("PER_ROLE_REFNO")
                        .HasColumnType("int");

                    b.HasIndex("PER_ROLE_REFNO");

                    b.ToTable("PERMISSIONS");
                });

            modelBuilder.Entity("MagicT.Shared.Models.ROLES", b =>
                {
                    b.HasBaseType("MagicT.Shared.Models.Base.AUTHORIZATIONS_BASE");

                    b.ToTable("ROLES");
                });

            modelBuilder.Entity("MagicT.Shared.Models.USER_ROLES", b =>
                {
                    b.HasOne("MagicT.Shared.Models.Base.AUTHORIZATIONS_BASE", "AUTHORIZATIONS_BASE")
                        .WithMany()
                        .HasForeignKey("UR_ROLE_REFNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagicT.Shared.Models.USERS", null)
                        .WithMany("USER_ROLES")
                        .HasForeignKey("UR_USER_REFNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AUTHORIZATIONS_BASE");
                });

            modelBuilder.Entity("MagicT.Shared.Models.AUDIT_FAILED", b =>
                {
                    b.HasOne("MagicT.Shared.Models.AUDIT_BASE", null)
                        .WithOne()
                        .HasForeignKey("MagicT.Shared.Models.AUDIT_FAILED", "AB_ROWID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagicT.Shared.Models.AUDIT_QUERY", b =>
                {
                    b.HasOne("MagicT.Shared.Models.AUDIT_BASE", null)
                        .WithOne()
                        .HasForeignKey("MagicT.Shared.Models.AUDIT_QUERY", "AB_ROWID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagicT.Shared.Models.AUDIT_RECORDS", b =>
                {
                    b.HasOne("MagicT.Shared.Models.AUDIT_BASE", null)
                        .WithOne()
                        .HasForeignKey("MagicT.Shared.Models.AUDIT_RECORDS", "AB_ROWID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagicT.Shared.Models.PERMISSIONS", b =>
                {
                    b.HasOne("MagicT.Shared.Models.Base.AUTHORIZATIONS_BASE", null)
                        .WithOne()
                        .HasForeignKey("MagicT.Shared.Models.PERMISSIONS", "AB_ROWID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagicT.Shared.Models.ROLES", null)
                        .WithMany("PERMISSIONS")
                        .HasForeignKey("PER_ROLE_REFNO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagicT.Shared.Models.ROLES", b =>
                {
                    b.HasOne("MagicT.Shared.Models.Base.AUTHORIZATIONS_BASE", null)
                        .WithOne()
                        .HasForeignKey("MagicT.Shared.Models.ROLES", "AB_ROWID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagicT.Shared.Models.USERS", b =>
                {
                    b.Navigation("USER_ROLES");
                });

            modelBuilder.Entity("MagicT.Shared.Models.ROLES", b =>
                {
                    b.Navigation("PERMISSIONS");
                });
#pragma warning restore 612, 618
        }
    }
}
